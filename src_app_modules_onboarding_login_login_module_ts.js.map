{"version":3,"file":"src_app_modules_onboarding_login_login_module_ts.js","mappings":"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","sources":["./src/app/modules/onboarding/login/login-routing.module.ts","./src/app/modules/onboarding/login/login.module.ts","./src/app/modules/onboarding/login/login.page.ts","./src/app/modules/onboarding/service/password.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n    \n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { LoadingController, ModalController } from '@ionic/angular';\nimport { ContactComponent } from '../modals/contact/contact.component';\nimport { PasswordComponent } from '../modals/password/password.component';\nimport { Geolocation } from '@awesome-cordova-plugins/geolocation/ngx';\nimport { PasswordService } from '../service/password.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  showPassword = false;\n  showPass = false;\n  passwordToggleIcon ='eye';\n  passToggleIcon ='eye';\n  signInForm: UntypedFormGroup;\n  lat = '';\n  long = '';\n  loading: HTMLIonLoadingElement;\n\n\n  constructor(\n    private modalController: ModalController,\n    private _formBuilder: UntypedFormBuilder,\n    private geolocation: Geolocation,\n    private passwordService:PasswordService,\n    public loadingController: LoadingController,\n    ) {\n      this.signInForm = this._formBuilder.group({\n        email: ['', [Validators.required]],\n        password: ['', Validators.required],\n        newPassword: [\n          '', \n          [\n            Validators.required,\n            Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$'),\n            Validators.minLength(6),\n            Validators.maxLength(25),\n          ]\n          ],\n    });\n    this.geolocation.getCurrentPosition().then((resp) => {\n      this.long = resp.coords.longitude.toString();\n      this.lat = resp.coords.latitude.toString();\n     }).catch((error) => {\n       console.log('Error getting location', error);\n     });\n\n   }\n\n  ngOnInit() {\n  }\n\n\n  signIn(): void {\n\n    let arrar = {\n        \"nickName\": this.signInForm.value.email,\n        \"oldPassword\": this.signInForm.value.password,\n        \"newPassword\": this.signInForm.value.newPassword,\n        \"geolocation\": {\n          \"latitude\":  this.lat,\n          \"longitude\": this.long\n        }\n      }\n      this.presentLoading();\n      this.passwordService.getAuth(arrar).subscribe(\n        (data) => {\n          this.loading.dismiss();\n          this.passWord()\n          this.signInForm = this._formBuilder.group({\n            email: ['', [Validators.required]],\n            password: ['', [Validators.required]],\n            newPassword: ['', [Validators.required,]],\n        }); \n          this.signInForm.valid == false;\n        },\n        (error) => {\n          this.loading.dismiss();\n        })    \n  \n  }\n  async presentLoading() {\n    this.loading = await this.loadingController.create({\n      cssClass: \"my-custom-class\",\n      message: \"Cargando...\",\n    });\n    await this.loading.present();\n  }\n\n  async passWord(){\n    const modal = await this.modalController.create({\n      component: PasswordComponent,\n      animated: true,\n      mode: \"ios\",\n      backdropDismiss: false,\n      cssClass: \"login-modal\",\n    });\n    modal.present();\n  }\n  \n  async contact(){\n    const modal = await this.modalController.create({\n      component: ContactComponent,\n      animated: true,\n      mode: \"ios\",\n      backdropDismiss: true,\n      cssClass: \"contact-modal\",\n    });\n    modal.present();\n  }\n\n  togglePassword():void{\n    this.showPassword = !this.showPassword;\n    if(this.passwordToggleIcon =='eye'){\n      this.passwordToggleIcon = 'eye-off';\n    } else{\n      this.passwordToggleIcon ='eye';\n    }\n  }\n  \n  togglePass():void{\n    this.showPass = !this.showPass;\n    if(this.passToggleIcon =='eye'){\n      this.passToggleIcon = 'eye-off';\n    } else{\n      this.passToggleIcon ='eye';\n    }\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n  urlBase = 'https://devtechreo.azurewebsites.net/';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }),\n  };\n\n  constructor(private http: HttpClient) { }\n\n\n  getAuth(params): Observable<any> {    \n    const uri = this.urlBase + 'changes/password'\n    console.log(params);\n  \n    let response = this.http.post<any>(uri, params, this.httpOptions);\n    return response;\n  }\n}\n"],"names":["Component","UntypedFormBuilder","Validators","LoadingController","ModalController","ContactComponent","PasswordComponent","Geolocation","PasswordService","LoginPage","constructor","modalController","_formBuilder","geolocation","passwordService","loadingController","signInForm","group","email","required","password","newPassword","pattern","minLength","maxLength","getCurrentPosition","then","resp","long","coords","longitude","toString","lat","latitude","catch","error","console","log","ngOnInit","signIn","arrar","value","presentLoading","getAuth","subscribe","data","loading","dismiss","passWord","valid","create","cssClass","message","present","modal","component","animated","mode","backdropDismiss","contact","togglePassword","showPassword","passwordToggleIcon","togglePass","showPass","passToggleIcon","selector","template"],"sourceRoot":"webpack:///"}